// The random number generator using Linear Congruential Generator (LCG) technic

class Random {
    field int seed; 
    field int A; 
    field int M; 
    field int Q; 
    field int R; 

    constructor Random new(int seedIn) {
        let seed = seedIn;
        if (seed = 0) {
            let seed = 1;
        }
        let A = 219;
        let M = 32767; // limit of int: -32768..32767
        let Q = M / A;
        let R = mod(M,A);
        return this;
    }

    // return a random number 0..32767
    method int rand() {
        var int temp;
        var int mod;
        let mod = mod(seed,Q);
        let temp = (A * mod) - (R * seed / Q);
        if (temp < 0) {
            let seed = temp + M;
        } else {
            let seed = temp;
        }
        return seed;
    }

    // return a random number 0..range
    method int randRange(int range) { 
        var int scale; 
        var int ret;
        let ret = rand();
        let scale = (M / (range + 1)); 
        return (ret / scale); 
    } 

    //dispose the Oject
    method void dispose(){
        do Memory.deAlloc(this);
        return;
    }

    // return must be positive
    method int mod(int a, int b) {
		var int d;
        var int r;
        let d = a / b;
        let r = a - (b * d);
        return r;
	}

    

}