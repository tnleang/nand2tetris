function Random.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push this 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
pop this 0
label IF_FALSE0
push constant 219
pop this 1
push constant 32767
pop this 2
push this 2
push this 1
call Math.divide 2
pop this 3
push pointer 0
push this 2
push this 1
call Random.mod 3
pop this 4
push pointer 0
return
function Random.rand 2
push argument 0
pop pointer 0
push pointer 0
push this 0
push this 3
call Random.mod 3
pop local 1
push this 1
push local 1
call Math.multiply 2
push this 4
push this 0
call Math.multiply 2
push this 3
call Math.divide 2
sub
pop local 0
push local 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 2
add
pop this 0
goto IF_END0
label IF_FALSE0
push local 0
pop this 0
label IF_END0
push this 0
return
function Random.randRange 2
push argument 0
pop pointer 0
push pointer 0
call Random.rand 1
pop local 1
push this 2
push argument 1
push constant 1
add
call Math.divide 2
pop local 0
push local 1
push local 0
call Math.divide 2
return
function Random.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Random.mod 2
push argument 0
pop pointer 0
push argument 1
push argument 2
call Math.divide 2
pop local 0
push argument 1
push argument 2
push local 0
call Math.multiply 2
sub
pop local 1
push local 1
return
